<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>


    <!--配置pageHelper拦截器插件-->
    <plugins>
        <plugin interceptor="com.github.pagehelper.PageInterceptor">
            <!-- 使用下面的方式配置参数-->
            <!-- 配置分页插件使用哪种方言，此处配置mysql-->
            <property name="helperDialect" value="mysql"/>
            <!--offsetAsPageNum：默认值为 false，该参数对使用 RowBounds 作为分页参数时有效。
            当该参数设置为 true 时，会将 RowBounds 中的 offset 参数当成 pageNum 使用，
            可以用页码和页面大小两个参数进行分页。-->
            <property name="offsetAsPageNum" value="false"/>
            <!--rowBoundsWithCount：默认值为false，该参数对使用 RowBounds 作为分页参数时有效。
            当该参数设置为true时，使用 RowBounds 分页会进行 count 查询-->
            <property name="rowBoundsWithCount" value="false"/>
            <!--pageSizeZero：默认值为 false，当该参数设置为 true 时，
            如果 pageSize=0 或者 RowBounds.limit = 0 就会查询出全部的结果
            （相当于没有执行分页查询，但是返回结果仍然是 Page 类型）-->
            <property name="pageSizeZero" value="true"/>
            <!--reasonable：分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页，
            pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询-->
            <property name="reasonable" value="true"/>
            <!--supportMethodsArguments：支持通过 Mapper 接口参数来传递分页参数，默认值false，
            分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，
            查找到合适的值时就会自动分页。 使用方法可以参考测试代码中的
            com.github.pagehelper.test.basic 包下的 ArgumentsMapTest 和 ArgumentsObjTest-->
            <property name="supportMethodsArguments" value="true"/>
            <!-- always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page -->
            <property name="returnPageInfo" value="none"/>
        </plugin>
    </plugins>

</configuration>
